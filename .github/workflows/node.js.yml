# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Docker build

on:
  pull_request:
    branches: ["main", "develop"]

permissions:
  contents: read
  packages: write

jobs:
  build_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Set lower case Github repository name
        run: |
          echo "GH_REPO_LC=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set proper tag name for Docker image
        run: |
          # Extracting the substring after "refs/heads/"
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"

          # Covering to lower case and replacing "/" with "-"
          BRANCH_NAME_LOWER=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed 's|/|-|g')

          # Creating new environment variable
          echo "TAG_NAME=$BRANCH_NAME_LOWER" >> $GITHUB_ENV
        env:
          GITHUB_REF: ${{ github.ref_name }}
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.GH_REPO_LC }}:${{ env.TAG_NAME }}

    # strategy:
    #   matrix:
    #     node-version: [18.x, 20.x, 22.x]
    #     # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # steps:
    # - uses: actions/checkout@v4
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    # - run: npm ci
    # - run: npm run build --if-present
    # - run: npm test
