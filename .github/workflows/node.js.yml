name: Docker build images

on:
  pull_request:
    branches: ["main", "develop"]

permissions:
  packages: write
  actions: write
  checks: write
  contents: read
  security-events: write

jobs:
  build_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Set lower case Github repository name
        run: |
          echo "GH_REPO_LC=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set proper tag name for Docker image
        run: |
          # Extracting the substring after "refs/heads/"
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"

          # Covering to lower case and replacing "/" with "-"
          BRANCH_NAME_LOWER=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed 's|/|-|g')

          # Creating new environment variable
          echo "TAG_NAME=$BRANCH_NAME_LOWER" >> $GITHUB_ENV
        env:
          GITHUB_REF: ${{ github.ref_name }}

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.GH_REPO_LC }}:${{ env.TAG_NAME }}

  secure_scan:
    runs-on: ubuntu-latest

    needs: build_docker

    steps:
      - name: Set lower case Github repository name
        run: |
          echo "GH_REPO_LC=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Set proper tag name for Docker image
        run: |
          # Extracting the substring after "refs/heads/"
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          # Covering to lower case and replacing "/" with "-"
          BRANCH_NAME_LOWER=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed 's|/|-|g')
          # Creating new environment variable
          echo "TAG_NAME=$BRANCH_NAME_LOWER" >> $GITHUB_ENV
        env:
          GITHUB_REF: ${{ github.ref_name }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: |
          docker build -t ghcr.io/${{ env.GH_REPO_LC }}:${{ env.TAG_NAME }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "ghcr.io/${{ env.GH_REPO_LC }}:${{ env.TAG_NAME }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@0.20.0
      #   with:
      #     image-ref: "ghcr.io/${{ env.GH_REPO_LC }}:${{ env.TAG_NAME }}"
      #     format: "sarif"
      #     output: "trivy-results.sarif"
      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: "trivy-results.sarif"
  e2e:
    needs: secure_scan
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
